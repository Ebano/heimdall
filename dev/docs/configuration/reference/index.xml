<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference on Heimdall</title><link>https://dadrus.github.io/docs/configuration/reference/</link><description>Recent content in Reference on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Jun 2022 18:57:50 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/docs/configuration/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration Types</title><link>https://dadrus.github.io/docs/configuration/reference/types/</link><pubDate>Thu, 09 Jun 2022 18:56:56 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/reference/types/</guid><description>Assertions This type enables configuration of required token and claim assertions. Depending on the object type (JWT or introspection response), the assertions apply to different parts of such objects.
scopes: Scopes Matcher (optional)
Required scopes given to the client.
audience: string array (optional)
Required entries in the aud claim. Both cases, either as whitespace separated string, or a JSON array are considered.
issuers: string array (mandatory)
Issuers to trust. At least one issuer must be configured.</description></item><item><title>Static Configuration Reference</title><link>https://dadrus.github.io/docs/configuration/reference/reference/</link><pubDate>Thu, 09 Jun 2022 18:57:50 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/reference/reference/</guid><description>Below you can find possible contents (not exhaustive) for Heimdallâ€™s config.yaml file. Head over to configuration documentation to get detailed explanation.
serve: decision: host: 127.0.0.1 port: 4468 verbose_errors: true timeout: read: 2s write: 5s idle: 2m cors: allowed_origins: - example.org allowed_methods: - GET - POST allowed_headers: - Authorization exposed_headers: - X-My-Header allow_credentials: true max_age: 1m tls: key: /path/to/key/file.pem cert: /path/to/cert/file.pem trusted_proxies: - 192.168.1.0/24 proxy: host: 127.0.0.1 port: 4469 verbose_errors: false timeout: read: 2s write: 5s idle: 2m cors: allowed_origins: - example.</description></item></channel></rss>