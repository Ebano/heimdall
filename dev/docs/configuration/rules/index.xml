<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rules on Heimdall</title><link>https://dadrus.github.io/docs/configuration/rules/</link><description>Recent content in Rules on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Jun 2022 22:11:50 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/docs/configuration/rules/index.xml" rel="self" type="application/rss+xml"/><item><title>Rules Overview</title><link>https://dadrus.github.io/docs/configuration/rules/overview/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/overview/</guid><description>This section explains how rules can be defined and used in detail. Before diving onto this topic, we recommend to make yourself familiar with the principal architecture and concepts.
Core aspects of heimdall are rules. These let heimdall execute logic required by your upstream service to authenticate, authorize the incoming requests, enrich the information about the subject and transform it according your needs. However, to be able to define even a single rule, you must configure pipeline mechanisms, which you can then use in any rules, you define.</description></item><item><title>Rule</title><link>https://dadrus.github.io/docs/configuration/rules/configuration/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/configuration/</guid><description>Rules are the heart of heimdall. These allow execution of arbitrary logic, required by your upstream service. This section describes everything related to the configuration of a particular rule and how can these be combined to rule sets, which can then be loaded by a rule provider.
Rule Configuration A single rule consists of the following properties:
id: string (mandatory)
The unique identifier of a rule. It must be unique across all rules loaded by the same Rule Provider.</description></item><item><title>Default Rule</title><link>https://dadrus.github.io/docs/configuration/rules/default/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/default/</guid><description>Heimdall lets you not only define upstream service specific rules, it does also support a definition of an optional default rule, which, if defined, kicks in, if no other rule matches. This way you can ensure secure defaults by simultaneously reducing the amount of work while defining upstream service API specific rules. That is, an upstream service API specific rule can reuse definitions from the default rule.
The default rule does not support all the properties, which can be configured in a specific rule.</description></item><item><title>Rule Providers</title><link>https://dadrus.github.io/docs/configuration/rules/providers/</link><pubDate>Thu, 09 Jun 2022 22:13:54 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/providers/</guid><description>Providers define the sources to load the Rule Sets from. These make heimdall’s behavior dynamic. All providers, you want to enable for a heimdall instance must be configured within the providers section of heimdall’s configuration.
Supported providers, including the corresponding configuration options are described below
Filesystem The filesystem provider allows loading of rule sets in a format defined in Rule Sets from a file system. The configuration of this provider goes into the file_system property.</description></item></channel></rss>