<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Observability on Heimdall</title><link>https://dadrus.github.io/docs/configuration/observability/</link><description>Recent content in Observability on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Jun 2022 22:11:50 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/docs/configuration/observability/index.xml" rel="self" type="application/rss+xml"/><item><title>Logging</title><link>https://dadrus.github.io/docs/configuration/observability/logging/</link><pubDate>Thu, 09 Jun 2022 18:56:07 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/observability/logging/</guid><description>Heimdall logs concern everything that happens to Heimdall itself (startup, configuration, events, shutdown, and so on). Logs are written to stdout by default in text format.
Configuration Logging configuration can be adjusted in the log property of heimdall’s configuration and supports following properties.
format: string (optional)
With text and gelf being the available formats. text is the default format. And gelf defines a JSON format adhering to GELF.
Usage of text (default) format is not recommended for production deployments as it requires more computational resources and is hence slow.</description></item><item><title>Metrics</title><link>https://dadrus.github.io/docs/configuration/observability/metrics/</link><pubDate>Thu, 09 Jun 2022 22:16:45 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/observability/metrics/</guid><description>Heimdall generates OpenTelemetry metrics and can export these either by pushing these to an OTEL collector (the default behavior), or by exposing them via a pull based service (Prometheus style).
Metrics are generated and exported by default. If this is not desired, you can explicitly disable this behavior by making use of the configuration options, described below. Alternatively, you can set the OTEL_METRICS_EXPORTER environment variable to none.
Configuration Configuration for this service can be adjusted in the metrics property of heimdall’s configuration by making use of the following properties.</description></item><item><title>Tracing</title><link>https://dadrus.github.io/docs/configuration/observability/tracing/</link><pubDate>Thu, 09 Jun 2022 18:56:12 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/observability/tracing/</guid><description>Heimdall makes use of OpenTelemetry for distributed tracing to support recording of paths taken by requests as they propagate through multi-service architectures and supports all environment variables including the defined values according to OpenTelemetry Environment Variable Specification.
Configuration By default, tracing is enabled and can be disabled and slightly tuned in the tracing property of heimdall’s configuration, which has the following properties.
enabled: boolean (optional)
By making use of this property, you can configure heimdall to enable or disable tracing.</description></item><item><title>Runtime Profiling</title><link>https://dadrus.github.io/docs/configuration/observability/profiling/</link><pubDate>Wed, 18 Jan 2023 19:21:48 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/observability/profiling/</guid><description>Heimdall can expose runtime profiling data in the profile.proto format (also known as pprof format), which can be consumed by many APM tools, like Google’s pprof, Grafana Phlare, Pyroscope and many more for analysis and visualization purposes. By default, this service is disabled. If enabled, the profiling information is available on 127.0.0.1:10251/debug/pprof endpoint.
Configuration Configuration for this service can be adjusted in the profiling property of heimdall’s configuration by making use of the following properties.</description></item></channel></rss>