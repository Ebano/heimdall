<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Heimdall</title><link>https://dadrus.github.io/docs/getting_started/</link><description>Recent content in Getting Started on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Jun 2022 14:28:36 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/docs/getting_started/index.xml" rel="self" type="application/rss+xml"/><item><title>Concepts</title><link>https://dadrus.github.io/docs/getting_started/concepts/</link><pubDate>Sat, 25 Jun 2022 14:29:17 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/concepts/</guid><description>Everything you need to know.
Pipeline As described in the Welcome section and also shown in the diagram below, Heimdall authenticates and authorizes incoming HTTP requests, rejecting unauthenticated or unauthorized ones, as well as enriches the valid requests with further information and transforms resulting subject information to a format, required by the upstream services. This is done in upstream service specific rules, which define the required individual pipelines.
Figure 1.</description></item><item><title>Quickstart</title><link>https://dadrus.github.io/docs/getting_started/quickstart/</link><pubDate>Wed, 08 Jun 2022 20:43:27 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/quickstart/</guid><description>This document describes a very simple use case.
Prerequisites git
The Go programming language &amp;gt;= 1.18.1
Docker if you want to build a docker container (you donâ€™t need Golang then)
Download Retrieve the latest copy of heimdall source code by cloning the git repository
$ git clone git@github.com:dadrus/heimdall.git Build with go Build using a single line with go build
$ go build -trimpath -ldflags=&amp;#34;-buildid= -w -s -X heimdall/cmd.Version=my-custom-build&amp;#34; The flags are set by intention.</description></item><item><title>Configuration Introduction</title><link>https://dadrus.github.io/docs/getting_started/configuration_introduction/</link><pubDate>Fri, 08 Jul 2022 09:16:36 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/configuration_introduction/</guid><description>Configuration in Heimdall can refer to two different things:
The fully dynamic configuration of rules - the rule set
The static startup configuration
Elements in the static configuration set up the services, like decision api, which basically define the entrypoints, Heimdall will listen to, the observability capabilities, like logging, the supported pipeline mechanisms, the default rule, as well as the rule providers (these elements are not expected to change often).</description></item></channel></rss>