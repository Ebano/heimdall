<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rules on Heimdall</title><link>https://dadrus.github.io/docs/configuration/rules/</link><description>Recent content in Rules on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Jun 2022 22:11:50 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/docs/configuration/rules/index.xml" rel="self" type="application/rss+xml"/><item><title>Providers</title><link>https://dadrus.github.io/docs/configuration/rules/providers/</link><pubDate>Thu, 09 Jun 2022 22:13:54 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/providers/</guid><description>Providers define the sources to load the rule sets from. These make Heimdall&amp;rsquo;s behavior dynamic. All providers, you want to enable for a Heimdall instance must be configured by within the providers section of Heimdall&amp;rsquo;s rules configuration.
Supported providers, including the corresponding configuration options are described below
Filesystem The filesystem provider allows loading of rule sets from a file system. The configuration of this provider goes into the file property. This provider is handy for e.</description></item><item><title>Default Rule</title><link>https://dadrus.github.io/docs/configuration/rules/default_rule/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/default_rule/</guid><description>Heimdall lets you not only define upstream service specific rules, it does also support a definition of an optional default rule, which, if defined, kicks in, if no other rule matches. This way you can ensure secure defaults by simultaneously reducing the amount of work while defining upstream service API specific rules. That is, an upstream service API specific rule can reuse definitions from the default rule.
The configuration of the default rule can be done by making use of the default property and configuring the following options.</description></item><item><title>Rule Definition</title><link>https://dadrus.github.io/docs/configuration/rules/rule_definition/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/rules/rule_definition/</guid><description>Rule Configuration A single rule consists of the following properties:
Name Type Mandatory Description id string yes The unique identifier of a rule. It must be unique across all rules. To ensure this it is recommended to let the id include the name of your upstream service, as well as its purpose. E.g. rule:my-service:public-api. url string yes Glob or Regex pattern of the endpoints of your upstream service, which this rule should apply to.</description></item></channel></rss>